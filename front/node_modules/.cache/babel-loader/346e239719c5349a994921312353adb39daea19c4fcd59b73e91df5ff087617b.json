{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ahomm\\\\Desktop\\\\moviemania2\\\\front\\\\src\\\\components\\\\Signin.js\",\n  _s = $RefreshSig$();\n// src/components/Signin.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Signin() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const handleSignin = async () => {\n    const res = await fetch('http://localhost:3000/auth/signin', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    const data = await res.json();\n    if (res.ok) {\n      setMessage(`Welcome, ${data.user.Name}!`);\n      // You can store user info, redirect, etc.\n    } else {\n      setMessage(data.error || 'Signin failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Username\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Password\",\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSignin,\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `message ${message.includes('Welcome') ? 'success' : ''}`,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }, this);\n}\n_s(Signin, \"UkS7RHHdqtHpQ+ssTj6NJz5Q4n8=\");\n_c = Signin;\nexport default Signin;\nvar _c;\n$RefreshReg$(_c, \"Signin\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Signin","_s","username","setUsername","password","setPassword","message","setMessage","handleSignin","res","fetch","method","headers","body","JSON","stringify","data","json","ok","user","Name","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","type","onClick","includes","_c","$RefreshReg$"],"sources":["C:/Users/ahomm/Desktop/moviemania2/front/src/components/Signin.js"],"sourcesContent":["// src/components/Signin.js\r\nimport React, { useState } from 'react';\r\n\r\nfunction Signin() {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleSignin = async () => {\r\n    const res = await fetch('http://localhost:3000/auth/signin', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ username, password }),\r\n    });\r\n    const data = await res.json();\r\n\r\n    if (res.ok) {\r\n      setMessage(`Welcome, ${data.user.Name}!`);\r\n      // You can store user info, redirect, etc.\r\n    } else {\r\n      setMessage(data.error || 'Signin failed');\r\n    }\r\n  };\r\n\r\nreturn (\r\n  <div className=\"form-container\">\r\n    <h2>Sign In</h2>\r\n    <input\r\n      placeholder=\"Username\"\r\n      value={username}\r\n      onChange={e => setUsername(e.target.value)}\r\n    />\r\n    <input\r\n      placeholder=\"Password\"\r\n      type=\"password\"\r\n      value={password}\r\n      onChange={e => setPassword(e.target.value)}\r\n    />\r\n    <button onClick={handleSignin}>Sign In</button>\r\n    <p className={`message ${message.includes('Welcome') ? 'success' : ''}`}>{message}</p>\r\n  </div>\r\n);\r\n\r\n}\r\n\r\nexport default Signin;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMW,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;MAC3DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEb,QAAQ;QAAEE;MAAS,CAAC;IAC7C,CAAC,CAAC;IACF,MAAMY,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;IAE7B,IAAIR,GAAG,CAACS,EAAE,EAAE;MACVX,UAAU,CAAC,YAAYS,IAAI,CAACG,IAAI,CAACC,IAAI,GAAG,CAAC;MACzC;IACF,CAAC,MAAM;MACLb,UAAU,CAACS,IAAI,CAACK,KAAK,IAAI,eAAe,CAAC;IAC3C;EACF,CAAC;EAEH,oBACEtB,OAAA;IAAKuB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BxB,OAAA;MAAAwB,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChB5B,OAAA;MACE6B,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAE3B,QAAS;MAChB4B,QAAQ,EAAEC,CAAC,IAAI5B,WAAW,CAAC4B,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACF5B,OAAA;MACE6B,WAAW,EAAC,UAAU;MACtBK,IAAI,EAAC,UAAU;MACfJ,KAAK,EAAEzB,QAAS;MAChB0B,QAAQ,EAAEC,CAAC,IAAI1B,WAAW,CAAC0B,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACF5B,OAAA;MAAQmC,OAAO,EAAE1B,YAAa;MAAAe,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/C5B,OAAA;MAAGuB,SAAS,EAAE,WAAWhB,OAAO,CAAC6B,QAAQ,CAAC,SAAS,CAAC,GAAG,SAAS,GAAG,EAAE,EAAG;MAAAZ,QAAA,EAAEjB;IAAO;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnF,CAAC;AAGR;AAAC1B,EAAA,CAxCQD,MAAM;AAAAoC,EAAA,GAANpC,MAAM;AA0Cf,eAAeA,MAAM;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}